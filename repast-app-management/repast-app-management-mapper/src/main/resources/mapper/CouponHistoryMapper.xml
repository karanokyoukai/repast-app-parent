<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.joewang.repast.mapper.CouponHistoryMapper">
  <resultMap id="BaseResultMap" type="com.joewang.repast.model.CouponHistory">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="shop_id" jdbcType="BIGINT" property="shopId" />
    <result column="coupon_id" jdbcType="BIGINT" property="couponId" />
    <result column="member_id" jdbcType="BIGINT" property="memberId" />
    <result column="coupon_code" jdbcType="VARCHAR" property="couponCode" />
    <result column="member_nickname" jdbcType="VARCHAR" property="memberNickname" />
    <result column="get_type" jdbcType="INTEGER" property="getType" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="use_status" jdbcType="INTEGER" property="useStatus" />
    <result column="use_time" jdbcType="TIMESTAMP" property="useTime" />
    <result column="order_id" jdbcType="BIGINT" property="orderId" />
    <result column="order_sn" jdbcType="VARCHAR" property="orderSn" />
  </resultMap>

  <select id="selectMemberCoupon" resultType="hashmap" parameterType="long">
    SELECT A.*,C.* FROM sms_coupon_history A
    JOIN ums_member B ON A.member_id = B.id
    JOIN sms_coupon C ON A.coupon_id = C.id
    WHERE B.id = #{memberid}
  </select>
  
  <update id="updateMemberCouponState">
    UPDATE sms_coupon_history A  SET A.use_status = 2
    WHERE A.use_status = 0 AND A.coupon_id IN (SELECT B.id FROM sms_coupon B WHERE B.end_time &lt; CURTIME())
  </update>

  <select id="selectConponCouldGet" resultType="com.joewang.repast.model.Coupon" parameterType="long">
    SELECT A.* FROM sms_coupon A
    WHERE A.shop_id IS NULL
    AND A.member_level <![CDATA[<= ]]> (SELECT member_level_id FROM ums_member WHERE id = #{memberid})
    AND A.id NOT IN (SELECT B.coupon_id FROM sms_coupon_history B WHERE B.use_status != 2 )
    AND A.end_time > CURTIME()
  </select>

  <select id="selectByMemberId" parameterType="Long" resultType="Map">
    select * from sms_coupon_history a
    join sms_coupon b on a.coupon_id = b.id
    where member_id = #{memberId}
  </select>

  <update id="updateUseStatus" >
    UPDATE sms_coupon_history A  SET A.use_status = 2
    WHERE A.use_status=0 and A.coupon_id IN (SELECT B.id FROM sms_coupon B WHERE B.end_time > CURTIME());
  </update>

  <update id="deleteCoupons" parameterType="Long">
    update sms_coupon_history set use_status = 3 where id = #{id}
  </update>

</mapper>